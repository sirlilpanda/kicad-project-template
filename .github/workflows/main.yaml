on: 
    push:
        branches: [main, master, workflow_testing]

jobs:
  setup_job:
    runs-on: ubuntu-latest
    name: set up project 
    if : ${{ github.repository != 'sirlilpanda/kicad-project-template' }}
    steps:
      - name: is their a dir here
        run: ls ${{ github.workspace }}
      - name: read-yaml-file
        uses: pietrobolcato/action-read-yaml@1.0.0
        id: read_action_js
        with:
          config: ${{ github.workspace }}/.project_settings.yaml

      - name: Setting up Python and chevron to processes failed reports
        # workflows really need some more work done on them
        if: ${{ !cancelled() && steps.read_action_js.outputs.has_been_set_up}} 
        uses: actions/setup-python@v5 
        with:
            python-version: '3.10'
            cache: 'pip'
      
      - name: installing requirements  
        if: ${{ !cancelled() && steps.read_action_js.outputs.has_been_set_up}} 
        run: pip install -r ${{ github.workspace }}/.github/report_processing/requirements.txt
      
      - name: rename project if setup has not been completed
        if: ${{ !cancelled() && steps.read_action_js.outputs.has_been_set_up}} 
        run: python ${{ github.workspace }}/.github/rename.py ${{github.event.repository.name}} > ${{ github.workspace }}/.project_settings.yaml 

      - name: commit production files
        if: ${{ !cancelled() && steps.read_action_js.outputs.has_been_set_up}} 
        uses: EndBug/add-and-commit@v9
        with:
          default_author: github_actions
          message: 'setup project'
          push: true
          add: "."

  kicad_job:
    runs-on: ubuntu-latest
    name: creating BOM schematic pdf and grbrs 
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Export production files
        id: production
        uses: sparkengineering/kicad-action@v3
        if: '!cancelled()'
        with:
          kicad_sch: Hardware/template_PROJECT/template.kicad_sch
          sch_pdf: true # Generate PDF
          sch_bom: true # Generate BOM
          kicad_pcb: Hardware/template_PROJECT/template.kicad_pcb
          pcb_gerbers: true # Generate Gerbers

      - name: Moving production files to correct location
        if: ${{ !cancelled() && steps.production.conclusion == 'success' }}
        run: |  
            mv ${{ github.workspace }}/Hardware/template_PROJECT/sch.pdf ${{ github.workspace }}/Hardware/template_DOCS/template_schematic.pdf
            mv ${{ github.workspace }}/Hardware/template_PROJECT/bom.csv ${{ github.workspace }}/Hardware/template_DOCS/BOM/bill_of_materials.csv
            mv ${{ github.workspace }}/Hardware/template_PROJECT/gbr.zip ${{ github.workspace }}/Hardware/template_PCB/grbr.zip

      - name: Run KiCad DRC
        id: drc
        uses: sparkengineering/kicad-action@v3
        if: '!cancelled()'
        with:
          kicad_pcb: Hardware/template_PROJECT/template.kicad_pcb
          pcb_drc: true
          report_format: json
          pcb_drc_file: drc.json

      - name: Run KiCad ERC
        id: erc
        uses: sparkengineering/kicad-action@v3
        if: '!cancelled()'
        with:
          kicad_sch: Hardware/template_PROJECT/template.kicad_sch
          sch_erc: true
          report_format: json
          sch_erc_file: erc.json

      - name: move DRC report
        if: '!cancelled()'
        run:
          mv ${{ github.workspace }}/Hardware/template_PROJECT/drc.json ${{ github.workspace }}/Hardware/template_DOCS/reports/drc.json

      - name: move ERC report
        if: '!cancelled()'
        run:
            mv ${{ github.workspace }}/Hardware/template_PROJECT/erc.json ${{ github.workspace }}/Hardware/template_DOCS/reports/erc.json

      - name: Setting up Python and chevron to processes failed reports
        if: ${{ !cancelled() }} 
        uses: actions/setup-python@v5 
        with:
            python-version: '3.10'
            cache: 'pip'
          # if this doesnt work i will just install chevron itself
      - name: installing requirements  
        if: ${{ !cancelled() }} 
        run: pip install -r ${{ github.workspace }}/.github/report_processing/requirements.txt

      - name: creating BOM report in markdown
        if: ${{ !cancelled() }} 
        run: python ${{ github.workspace }}/.github/report_processing/process_bom_files.py ${{ github.workspace }}/Hardware/template_DOCS/BOM/bill_of_materials.csv ${{ github.workspace }}/.github/report_templates/bom_template.mustache ${{ github.workspace }}/Hardware/template_DOCS/BOM/bom_report.md
      
      - name: creating ERC report in markdown
        if: ${{ !cancelled() }} 
        run: python ${{ github.workspace }}/.github/report_processing/process_json_reports.py ${{ github.workspace }}/Hardware/template_DOCS/reports/erc.json ${{ github.workspace }}/.github/report_templates/erc_report_template.mustache ${{ github.workspace }}/Hardware/template_DOCS/reports/erc.md
      
      - name: creating DRC report in markdown
        if: ${{ !cancelled() }} 
        run: python ${{ github.workspace }}/.github/report_processing/process_json_reports.py ${{ github.workspace }}/Hardware/template_DOCS/reports/drc.json ${{ github.workspace }}/.github/report_templates/drc_report_template.mustache ${{ github.workspace }}/Hardware/template_DOCS/reports/drc.md
  
      - name: commit production files
        if: ${{ !cancelled() && steps.production.conclusion == 'success' }}
        uses: EndBug/add-and-commit@v9
        with:
          default_author: github_actions
          message: 'auto updated doc'
          push: true
          add: "."